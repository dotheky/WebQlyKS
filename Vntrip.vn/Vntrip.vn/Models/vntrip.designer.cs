#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Vntrip.vn.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="KhachSanVNTRIP")]
	public partial class vntripDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDanhGia(DanhGia instance);
    partial void UpdateDanhGia(DanhGia instance);
    partial void DeleteDanhGia(DanhGia instance);
    partial void InsertDanhSachDichVu(DanhSachDichVu instance);
    partial void UpdateDanhSachDichVu(DanhSachDichVu instance);
    partial void DeleteDanhSachDichVu(DanhSachDichVu instance);
    partial void InsertHinhAnhKhachSan(HinhAnhKhachSan instance);
    partial void UpdateHinhAnhKhachSan(HinhAnhKhachSan instance);
    partial void DeleteHinhAnhKhachSan(HinhAnhKhachSan instance);
    partial void InsertHinhAnhPhong(HinhAnhPhong instance);
    partial void UpdateHinhAnhPhong(HinhAnhPhong instance);
    partial void DeleteHinhAnhPhong(HinhAnhPhong instance);
    partial void InsertKhachSan(KhachSan instance);
    partial void UpdateKhachSan(KhachSan instance);
    partial void DeleteKhachSan(KhachSan instance);
    partial void InsertHoaDon(HoaDon instance);
    partial void UpdateHoaDon(HoaDon instance);
    partial void DeleteHoaDon(HoaDon instance);
    partial void InsertKhuVuc(KhuVuc instance);
    partial void UpdateKhuVuc(KhuVuc instance);
    partial void DeleteKhuVuc(KhuVuc instance);
    partial void InsertPhong(Phong instance);
    partial void UpdatePhong(Phong instance);
    partial void DeletePhong(Phong instance);
    partial void InsertQuanHuyen(QuanHuyen instance);
    partial void UpdateQuanHuyen(QuanHuyen instance);
    partial void DeleteQuanHuyen(QuanHuyen instance);
    partial void InsertTaiKhoan(TaiKhoan instance);
    partial void UpdateTaiKhoan(TaiKhoan instance);
    partial void DeleteTaiKhoan(TaiKhoan instance);
    partial void InsertTienNghi(TienNghi instance);
    partial void UpdateTienNghi(TienNghi instance);
    partial void DeleteTienNghi(TienNghi instance);
    partial void InsertTinhThanh(TinhThanh instance);
    partial void UpdateTinhThanh(TinhThanh instance);
    partial void DeleteTinhThanh(TinhThanh instance);
    #endregion
		
		public vntripDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["KhachSanVNTRIPConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public vntripDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vntripDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vntripDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public vntripDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DanhGia> DanhGias
		{
			get
			{
				return this.GetTable<DanhGia>();
			}
		}
		
		public System.Data.Linq.Table<DanhSachDichVu> DanhSachDichVus
		{
			get
			{
				return this.GetTable<DanhSachDichVu>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhKhachSan> HinhAnhKhachSans
		{
			get
			{
				return this.GetTable<HinhAnhKhachSan>();
			}
		}
		
		public System.Data.Linq.Table<HinhAnhPhong> HinhAnhPhongs
		{
			get
			{
				return this.GetTable<HinhAnhPhong>();
			}
		}
		
		public System.Data.Linq.Table<KhachSan> KhachSans
		{
			get
			{
				return this.GetTable<KhachSan>();
			}
		}
		
		public System.Data.Linq.Table<HoaDon> HoaDons
		{
			get
			{
				return this.GetTable<HoaDon>();
			}
		}
		
		public System.Data.Linq.Table<KhuVuc> KhuVucs
		{
			get
			{
				return this.GetTable<KhuVuc>();
			}
		}
		
		public System.Data.Linq.Table<Phong> Phongs
		{
			get
			{
				return this.GetTable<Phong>();
			}
		}
		
		public System.Data.Linq.Table<QuanHuyen> QuanHuyens
		{
			get
			{
				return this.GetTable<QuanHuyen>();
			}
		}
		
		public System.Data.Linq.Table<TaiKhoan> TaiKhoans
		{
			get
			{
				return this.GetTable<TaiKhoan>();
			}
		}
		
		public System.Data.Linq.Table<TienNghi> TienNghis
		{
			get
			{
				return this.GetTable<TienNghi>();
			}
		}
		
		public System.Data.Linq.Table<TinhThanh> TinhThanhs
		{
			get
			{
				return this.GetTable<TinhThanh>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhGia")]
	public partial class DanhGia : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDKhachHang;
		
		private int _IDKhachSan;
		
		private System.Nullable<double> _diem;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<KhachSan> _KhachSan;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKhachHangChanging(int value);
    partial void OnIDKhachHangChanged();
    partial void OnIDKhachSanChanging(int value);
    partial void OnIDKhachSanChanged();
    partial void OndiemChanging(System.Nullable<double> value);
    partial void OndiemChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public DanhGia()
		{
			this._KhachSan = default(EntityRef<KhachSan>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachHang", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IDKhachHang
		{
			get
			{
				return this._IDKhachHang;
			}
			set
			{
				if ((this._IDKhachHang != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachHangChanging(value);
					this.SendPropertyChanging();
					this._IDKhachHang = value;
					this.SendPropertyChanged("IDKhachHang");
					this.OnIDKhachHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachSan", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IDKhachSan
		{
			get
			{
				return this._IDKhachSan;
			}
			set
			{
				if ((this._IDKhachSan != value))
				{
					if (this._KhachSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachSanChanging(value);
					this.SendPropertyChanging();
					this._IDKhachSan = value;
					this.SendPropertyChanged("IDKhachSan");
					this.OnIDKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_diem", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> diem
		{
			get
			{
				return this._diem;
			}
			set
			{
				if ((this._diem != value))
				{
					this.OndiemChanging(value);
					this.SendPropertyChanging();
					this._diem = value;
					this.SendPropertyChanged("diem");
					this.OndiemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_DanhGia", Storage="_KhachSan", ThisKey="IDKhachSan", OtherKey="ID", IsForeignKey=true)]
		public KhachSan KhachSan
		{
			get
			{
				return this._KhachSan.Entity;
			}
			set
			{
				KhachSan previousValue = this._KhachSan.Entity;
				if (((previousValue != value) 
							|| (this._KhachSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachSan.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._KhachSan.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._IDKhachSan = value.ID;
					}
					else
					{
						this._IDKhachSan = default(int);
					}
					this.SendPropertyChanged("KhachSan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGia", Storage="_TaiKhoan", ThisKey="IDKhachHang", OtherKey="ID", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.DanhGias.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.DanhGias.Add(this);
						this._IDKhachHang = value.ID;
					}
					else
					{
						this._IDKhachHang = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhSachDichVu")]
	public partial class DanhSachDichVu : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDKhachSan;
		
		private int _IDTienNghi;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<KhachSan> _KhachSan;
		
		private EntityRef<TienNghi> _TienNghi;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDKhachSanChanging(int value);
    partial void OnIDKhachSanChanged();
    partial void OnIDTienNghiChanging(int value);
    partial void OnIDTienNghiChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public DanhSachDichVu()
		{
			this._KhachSan = default(EntityRef<KhachSan>);
			this._TienNghi = default(EntityRef<TienNghi>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachSan", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int IDKhachSan
		{
			get
			{
				return this._IDKhachSan;
			}
			set
			{
				if ((this._IDKhachSan != value))
				{
					if (this._KhachSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachSanChanging(value);
					this.SendPropertyChanging();
					this._IDKhachSan = value;
					this.SendPropertyChanged("IDKhachSan");
					this.OnIDKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTienNghi", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int IDTienNghi
		{
			get
			{
				return this._IDTienNghi;
			}
			set
			{
				if ((this._IDTienNghi != value))
				{
					if (this._TienNghi.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTienNghiChanging(value);
					this.SendPropertyChanging();
					this._IDTienNghi = value;
					this.SendPropertyChanged("IDTienNghi");
					this.OnIDTienNghiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_DanhSachDichVu", Storage="_KhachSan", ThisKey="IDKhachSan", OtherKey="ID", IsForeignKey=true)]
		public KhachSan KhachSan
		{
			get
			{
				return this._KhachSan.Entity;
			}
			set
			{
				KhachSan previousValue = this._KhachSan.Entity;
				if (((previousValue != value) 
							|| (this._KhachSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachSan.Entity = null;
						previousValue.DanhSachDichVus.Remove(this);
					}
					this._KhachSan.Entity = value;
					if ((value != null))
					{
						value.DanhSachDichVus.Add(this);
						this._IDKhachSan = value.ID;
					}
					else
					{
						this._IDKhachSan = default(int);
					}
					this.SendPropertyChanged("KhachSan");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TienNghi_DanhSachDichVu", Storage="_TienNghi", ThisKey="IDTienNghi", OtherKey="ID", IsForeignKey=true)]
		public TienNghi TienNghi
		{
			get
			{
				return this._TienNghi.Entity;
			}
			set
			{
				TienNghi previousValue = this._TienNghi.Entity;
				if (((previousValue != value) 
							|| (this._TienNghi.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TienNghi.Entity = null;
						previousValue.DanhSachDichVus.Remove(this);
					}
					this._TienNghi.Entity = value;
					if ((value != null))
					{
						value.DanhSachDichVus.Add(this);
						this._IDTienNghi = value.ID;
					}
					else
					{
						this._IDTienNghi = default(int);
					}
					this.SendPropertyChanged("TienNghi");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhKhachSan")]
	public partial class HinhAnhKhachSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDKhachSan;
		
		private string _link;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<KhachSan> _KhachSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDKhachSanChanging(int value);
    partial void OnIDKhachSanChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public HinhAnhKhachSan()
		{
			this._KhachSan = default(EntityRef<KhachSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachSan", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int IDKhachSan
		{
			get
			{
				return this._IDKhachSan;
			}
			set
			{
				if ((this._IDKhachSan != value))
				{
					if (this._KhachSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachSanChanging(value);
					this.SendPropertyChanging();
					this._IDKhachSan = value;
					this.SendPropertyChanged("IDKhachSan");
					this.OnIDKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_HinhAnhKhachSan", Storage="_KhachSan", ThisKey="IDKhachSan", OtherKey="ID", IsForeignKey=true)]
		public KhachSan KhachSan
		{
			get
			{
				return this._KhachSan.Entity;
			}
			set
			{
				KhachSan previousValue = this._KhachSan.Entity;
				if (((previousValue != value) 
							|| (this._KhachSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachSan.Entity = null;
						previousValue.HinhAnhKhachSans.Remove(this);
					}
					this._KhachSan.Entity = value;
					if ((value != null))
					{
						value.HinhAnhKhachSans.Add(this);
						this._IDKhachSan = value.ID;
					}
					else
					{
						this._IDKhachSan = default(int);
					}
					this.SendPropertyChanged("KhachSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhAnhPhong")]
	public partial class HinhAnhPhong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDPhong;
		
		private string _link;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<Phong> _Phong;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPhongChanging(int value);
    partial void OnIDPhongChanged();
    partial void OnlinkChanging(string value);
    partial void OnlinkChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public HinhAnhPhong()
		{
			this._Phong = default(EntityRef<Phong>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhong", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int IDPhong
		{
			get
			{
				return this._IDPhong;
			}
			set
			{
				if ((this._IDPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongChanging(value);
					this.SendPropertyChanging();
					this._IDPhong = value;
					this.SendPropertyChanged("IDPhong");
					this.OnIDPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_link", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string link
		{
			get
			{
				return this._link;
			}
			set
			{
				if ((this._link != value))
				{
					this.OnlinkChanging(value);
					this.SendPropertyChanging();
					this._link = value;
					this.SendPropertyChanged("link");
					this.OnlinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HinhAnhPhong", Storage="_Phong", ThisKey="IDPhong", OtherKey="ID", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.HinhAnhPhongs.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.HinhAnhPhongs.Add(this);
						this._IDPhong = value.ID;
					}
					else
					{
						this._IDPhong = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhachSan")]
	public partial class KhachSan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenKhachSan;
		
		private System.Nullable<int> _IDTinhThanh;
		
		private string _MoTaNgan;
		
		private string _TienNghiNgan;
		
		private string _HinhAnhKS;
		
		private string _LoaiKhachSan;
		
		private string _DiaChi;
		
		private string _LinkKS;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<DanhSachDichVu> _DanhSachDichVus;
		
		private EntitySet<HinhAnhKhachSan> _HinhAnhKhachSans;
		
		private EntitySet<Phong> _Phongs;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenKhachSanChanging(string value);
    partial void OnTenKhachSanChanged();
    partial void OnIDTinhThanhChanging(System.Nullable<int> value);
    partial void OnIDTinhThanhChanged();
    partial void OnMoTaNganChanging(string value);
    partial void OnMoTaNganChanged();
    partial void OnTienNghiNganChanging(string value);
    partial void OnTienNghiNganChanged();
    partial void OnHinhAnhKSChanging(string value);
    partial void OnHinhAnhKSChanged();
    partial void OnLoaiKhachSanChanging(string value);
    partial void OnLoaiKhachSanChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnLinkKSChanging(string value);
    partial void OnLinkKSChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public KhachSan()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._DanhSachDichVus = new EntitySet<DanhSachDichVu>(new Action<DanhSachDichVu>(this.attach_DanhSachDichVus), new Action<DanhSachDichVu>(this.detach_DanhSachDichVus));
			this._HinhAnhKhachSans = new EntitySet<HinhAnhKhachSan>(new Action<HinhAnhKhachSan>(this.attach_HinhAnhKhachSans), new Action<HinhAnhKhachSan>(this.detach_HinhAnhKhachSans));
			this._Phongs = new EntitySet<Phong>(new Action<Phong>(this.attach_Phongs), new Action<Phong>(this.detach_Phongs));
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhachSan", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenKhachSan
		{
			get
			{
				return this._TenKhachSan;
			}
			set
			{
				if ((this._TenKhachSan != value))
				{
					this.OnTenKhachSanChanging(value);
					this.SendPropertyChanging();
					this._TenKhachSan = value;
					this.SendPropertyChanged("TenKhachSan");
					this.OnTenKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTinhThanh", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IDTinhThanh
		{
			get
			{
				return this._IDTinhThanh;
			}
			set
			{
				if ((this._IDTinhThanh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._IDTinhThanh = value;
					this.SendPropertyChanged("IDTinhThanh");
					this.OnIDTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaNgan", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string MoTaNgan
		{
			get
			{
				return this._MoTaNgan;
			}
			set
			{
				if ((this._MoTaNgan != value))
				{
					this.OnMoTaNganChanging(value);
					this.SendPropertyChanging();
					this._MoTaNgan = value;
					this.SendPropertyChanged("MoTaNgan");
					this.OnMoTaNganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TienNghiNgan", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string TienNghiNgan
		{
			get
			{
				return this._TienNghiNgan;
			}
			set
			{
				if ((this._TienNghiNgan != value))
				{
					this.OnTienNghiNganChanging(value);
					this.SendPropertyChanging();
					this._TienNghiNgan = value;
					this.SendPropertyChanged("TienNghiNgan");
					this.OnTienNghiNganChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HinhAnhKS", DbType="NVarChar(100)", UpdateCheck=UpdateCheck.Never)]
		public string HinhAnhKS
		{
			get
			{
				return this._HinhAnhKS;
			}
			set
			{
				if ((this._HinhAnhKS != value))
				{
					this.OnHinhAnhKSChanging(value);
					this.SendPropertyChanging();
					this._HinhAnhKS = value;
					this.SendPropertyChanged("HinhAnhKS");
					this.OnHinhAnhKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiKhachSan", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string LoaiKhachSan
		{
			get
			{
				return this._LoaiKhachSan;
			}
			set
			{
				if ((this._LoaiKhachSan != value))
				{
					this.OnLoaiKhachSanChanging(value);
					this.SendPropertyChanging();
					this._LoaiKhachSan = value;
					this.SendPropertyChanged("LoaiKhachSan");
					this.OnLoaiKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(150)", UpdateCheck=UpdateCheck.Never)]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LinkKS", DbType="NVarChar(300)", UpdateCheck=UpdateCheck.Never)]
		public string LinkKS
		{
			get
			{
				return this._LinkKS;
			}
			set
			{
				if ((this._LinkKS != value))
				{
					this.OnLinkKSChanging(value);
					this.SendPropertyChanging();
					this._LinkKS = value;
					this.SendPropertyChanged("LinkKS");
					this.OnLinkKSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_DanhGia", Storage="_DanhGias", ThisKey="ID", OtherKey="IDKhachSan")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_DanhSachDichVu", Storage="_DanhSachDichVus", ThisKey="ID", OtherKey="IDKhachSan")]
		public EntitySet<DanhSachDichVu> DanhSachDichVus
		{
			get
			{
				return this._DanhSachDichVus;
			}
			set
			{
				this._DanhSachDichVus.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_HinhAnhKhachSan", Storage="_HinhAnhKhachSans", ThisKey="ID", OtherKey="IDKhachSan")]
		public EntitySet<HinhAnhKhachSan> HinhAnhKhachSans
		{
			get
			{
				return this._HinhAnhKhachSans;
			}
			set
			{
				this._HinhAnhKhachSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_Phong", Storage="_Phongs", ThisKey="ID", OtherKey="IDKhachSan")]
		public EntitySet<Phong> Phongs
		{
			get
			{
				return this._Phongs;
			}
			set
			{
				this._Phongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_KhachSan", Storage="_TinhThanh", ThisKey="IDTinhThanh", OtherKey="ID", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.KhachSans.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.KhachSans.Add(this);
						this._IDTinhThanh = value.ID;
					}
					else
					{
						this._IDTinhThanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = null;
		}
		
		private void attach_DanhSachDichVus(DanhSachDichVu entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = this;
		}
		
		private void detach_DanhSachDichVus(DanhSachDichVu entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = null;
		}
		
		private void attach_HinhAnhKhachSans(HinhAnhKhachSan entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = this;
		}
		
		private void detach_HinhAnhKhachSans(HinhAnhKhachSan entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = null;
		}
		
		private void attach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = this;
		}
		
		private void detach_Phongs(Phong entity)
		{
			this.SendPropertyChanging();
			entity.KhachSan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HoaDon")]
	public partial class HoaDon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private int _IDTaiKhoan;
		
		private int _IDPhong;
		
		private System.Nullable<double> _tongtien;
		
		private System.Nullable<int> _songuoi;
		
		private System.Nullable<System.DateTime> _NgayThue;
		
		private System.Nullable<System.DateTime> _NgayTra;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<Phong> _Phong;
		
		private EntityRef<TaiKhoan> _TaiKhoan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnIDTaiKhoanChanging(int value);
    partial void OnIDTaiKhoanChanged();
    partial void OnIDPhongChanging(int value);
    partial void OnIDPhongChanged();
    partial void OntongtienChanging(System.Nullable<double> value);
    partial void OntongtienChanged();
    partial void OnsonguoiChanging(System.Nullable<int> value);
    partial void OnsonguoiChanged();
    partial void OnNgayThueChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayThueChanged();
    partial void OnNgayTraChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayTraChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public HoaDon()
		{
			this._Phong = default(EntityRef<Phong>);
			this._TaiKhoan = default(EntityRef<TaiKhoan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTaiKhoan", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IDTaiKhoan
		{
			get
			{
				return this._IDTaiKhoan;
			}
			set
			{
				if ((this._IDTaiKhoan != value))
				{
					if (this._TaiKhoan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTaiKhoanChanging(value);
					this.SendPropertyChanging();
					this._IDTaiKhoan = value;
					this.SendPropertyChanged("IDTaiKhoan");
					this.OnIDTaiKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPhong", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int IDPhong
		{
			get
			{
				return this._IDPhong;
			}
			set
			{
				if ((this._IDPhong != value))
				{
					if (this._Phong.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPhongChanging(value);
					this.SendPropertyChanging();
					this._IDPhong = value;
					this.SendPropertyChanged("IDPhong");
					this.OnIDPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tongtien", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> tongtien
		{
			get
			{
				return this._tongtien;
			}
			set
			{
				if ((this._tongtien != value))
				{
					this.OntongtienChanging(value);
					this.SendPropertyChanging();
					this._tongtien = value;
					this.SendPropertyChanged("tongtien");
					this.OntongtienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_songuoi", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> songuoi
		{
			get
			{
				return this._songuoi;
			}
			set
			{
				if ((this._songuoi != value))
				{
					this.OnsonguoiChanging(value);
					this.SendPropertyChanging();
					this._songuoi = value;
					this.SendPropertyChanged("songuoi");
					this.OnsonguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayThue", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> NgayThue
		{
			get
			{
				return this._NgayThue;
			}
			set
			{
				if ((this._NgayThue != value))
				{
					this.OnNgayThueChanging(value);
					this.SendPropertyChanging();
					this._NgayThue = value;
					this.SendPropertyChanged("NgayThue");
					this.OnNgayThueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTra", DbType="Date", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> NgayTra
		{
			get
			{
				return this._NgayTra;
			}
			set
			{
				if ((this._NgayTra != value))
				{
					this.OnNgayTraChanging(value);
					this.SendPropertyChanging();
					this._NgayTra = value;
					this.SendPropertyChanged("NgayTra");
					this.OnNgayTraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HoaDon", Storage="_Phong", ThisKey="IDPhong", OtherKey="ID", IsForeignKey=true)]
		public Phong Phong
		{
			get
			{
				return this._Phong.Entity;
			}
			set
			{
				Phong previousValue = this._Phong.Entity;
				if (((previousValue != value) 
							|| (this._Phong.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Phong.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._Phong.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDPhong = value.ID;
					}
					else
					{
						this._IDPhong = default(int);
					}
					this.SendPropertyChanged("Phong");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HoaDon", Storage="_TaiKhoan", ThisKey="IDTaiKhoan", OtherKey="ID", IsForeignKey=true)]
		public TaiKhoan TaiKhoan
		{
			get
			{
				return this._TaiKhoan.Entity;
			}
			set
			{
				TaiKhoan previousValue = this._TaiKhoan.Entity;
				if (((previousValue != value) 
							|| (this._TaiKhoan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TaiKhoan.Entity = null;
						previousValue.HoaDons.Remove(this);
					}
					this._TaiKhoan.Entity = value;
					if ((value != null))
					{
						value.HoaDons.Add(this);
						this._IDTaiKhoan = value.ID;
					}
					else
					{
						this._IDTaiKhoan = default(int);
					}
					this.SendPropertyChanged("TaiKhoan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KhuVuc")]
	public partial class KhuVuc : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDQuanHuyen;
		
		private string _TenKhuVuc;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntityRef<QuanHuyen> _QuanHuyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDQuanHuyenChanging(int value);
    partial void OnIDQuanHuyenChanged();
    partial void OnTenKhuVucChanging(string value);
    partial void OnTenKhuVucChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public KhuVuc()
		{
			this._QuanHuyen = default(EntityRef<QuanHuyen>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDQuanHuyen", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int IDQuanHuyen
		{
			get
			{
				return this._IDQuanHuyen;
			}
			set
			{
				if ((this._IDQuanHuyen != value))
				{
					if (this._QuanHuyen.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._IDQuanHuyen = value;
					this.SendPropertyChanged("IDQuanHuyen");
					this.OnIDQuanHuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKhuVuc", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenKhuVuc
		{
			get
			{
				return this._TenKhuVuc;
			}
			set
			{
				if ((this._TenKhuVuc != value))
				{
					this.OnTenKhuVucChanging(value);
					this.SendPropertyChanging();
					this._TenKhuVuc = value;
					this.SendPropertyChanged("TenKhuVuc");
					this.OnTenKhuVucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanHuyen_KhuVuc", Storage="_QuanHuyen", ThisKey="IDQuanHuyen", OtherKey="ID", IsForeignKey=true)]
		public QuanHuyen QuanHuyen
		{
			get
			{
				return this._QuanHuyen.Entity;
			}
			set
			{
				QuanHuyen previousValue = this._QuanHuyen.Entity;
				if (((previousValue != value) 
							|| (this._QuanHuyen.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QuanHuyen.Entity = null;
						previousValue.KhuVucs.Remove(this);
					}
					this._QuanHuyen.Entity = value;
					if ((value != null))
					{
						value.KhuVucs.Add(this);
						this._IDQuanHuyen = value.ID;
					}
					else
					{
						this._IDQuanHuyen = default(int);
					}
					this.SendPropertyChanged("QuanHuyen");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Phong")]
	public partial class Phong : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenPhong;
		
		private int _SoNguoi;
		
		private string _LoaiPhong;
		
		private int _SoGiuong;
		
		private string _Mota;
		
		private double _Gia;
		
		private System.Nullable<int> _IDKhachSan;
		
		private System.Nullable<double> _DienTich;
		
		private string _MoTaChiTiet;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<HinhAnhPhong> _HinhAnhPhongs;
		
		private EntitySet<HoaDon> _HoaDons;
		
		private EntityRef<KhachSan> _KhachSan;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenPhongChanging(string value);
    partial void OnTenPhongChanged();
    partial void OnSoNguoiChanging(int value);
    partial void OnSoNguoiChanged();
    partial void OnLoaiPhongChanging(string value);
    partial void OnLoaiPhongChanged();
    partial void OnSoGiuongChanging(int value);
    partial void OnSoGiuongChanged();
    partial void OnMotaChanging(string value);
    partial void OnMotaChanged();
    partial void OnGiaChanging(double value);
    partial void OnGiaChanged();
    partial void OnIDKhachSanChanging(System.Nullable<int> value);
    partial void OnIDKhachSanChanged();
    partial void OnDienTichChanging(System.Nullable<double> value);
    partial void OnDienTichChanged();
    partial void OnMoTaChiTietChanging(string value);
    partial void OnMoTaChiTietChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public Phong()
		{
			this._HinhAnhPhongs = new EntitySet<HinhAnhPhong>(new Action<HinhAnhPhong>(this.attach_HinhAnhPhongs), new Action<HinhAnhPhong>(this.detach_HinhAnhPhongs));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			this._KhachSan = default(EntityRef<KhachSan>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhong", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenPhong
		{
			get
			{
				return this._TenPhong;
			}
			set
			{
				if ((this._TenPhong != value))
				{
					this.OnTenPhongChanging(value);
					this.SendPropertyChanging();
					this._TenPhong = value;
					this.SendPropertyChanged("TenPhong");
					this.OnTenPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoNguoi", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SoNguoi
		{
			get
			{
				return this._SoNguoi;
			}
			set
			{
				if ((this._SoNguoi != value))
				{
					this.OnSoNguoiChanging(value);
					this.SendPropertyChanging();
					this._SoNguoi = value;
					this.SendPropertyChanged("SoNguoi");
					this.OnSoNguoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LoaiPhong", DbType="NVarChar(40) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string LoaiPhong
		{
			get
			{
				return this._LoaiPhong;
			}
			set
			{
				if ((this._LoaiPhong != value))
				{
					this.OnLoaiPhongChanging(value);
					this.SendPropertyChanging();
					this._LoaiPhong = value;
					this.SendPropertyChanged("LoaiPhong");
					this.OnLoaiPhongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoGiuong", DbType="Int NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public int SoGiuong
		{
			get
			{
				return this._SoGiuong;
			}
			set
			{
				if ((this._SoGiuong != value))
				{
					this.OnSoGiuongChanging(value);
					this.SendPropertyChanging();
					this._SoGiuong = value;
					this.SendPropertyChanged("SoGiuong");
					this.OnSoGiuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mota", DbType="NVarChar(100) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string Mota
		{
			get
			{
				return this._Mota;
			}
			set
			{
				if ((this._Mota != value))
				{
					this.OnMotaChanging(value);
					this.SendPropertyChanging();
					this._Mota = value;
					this.SendPropertyChanged("Mota");
					this.OnMotaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gia", DbType="Float NOT NULL", UpdateCheck=UpdateCheck.Never)]
		public double Gia
		{
			get
			{
				return this._Gia;
			}
			set
			{
				if ((this._Gia != value))
				{
					this.OnGiaChanging(value);
					this.SendPropertyChanging();
					this._Gia = value;
					this.SendPropertyChanged("Gia");
					this.OnGiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDKhachSan", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IDKhachSan
		{
			get
			{
				return this._IDKhachSan;
			}
			set
			{
				if ((this._IDKhachSan != value))
				{
					if (this._KhachSan.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDKhachSanChanging(value);
					this.SendPropertyChanging();
					this._IDKhachSan = value;
					this.SendPropertyChanged("IDKhachSan");
					this.OnIDKhachSanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienTich", DbType="Float", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<double> DienTich
		{
			get
			{
				return this._DienTich;
			}
			set
			{
				if ((this._DienTich != value))
				{
					this.OnDienTichChanging(value);
					this.SendPropertyChanging();
					this._DienTich = value;
					this.SendPropertyChanged("DienTich");
					this.OnDienTichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaChiTiet", DbType="NVarChar(200) NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string MoTaChiTiet
		{
			get
			{
				return this._MoTaChiTiet;
			}
			set
			{
				if ((this._MoTaChiTiet != value))
				{
					this.OnMoTaChiTietChanging(value);
					this.SendPropertyChanging();
					this._MoTaChiTiet = value;
					this.SendPropertyChanged("MoTaChiTiet");
					this.OnMoTaChiTietChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HinhAnhPhong", Storage="_HinhAnhPhongs", ThisKey="ID", OtherKey="IDPhong")]
		public EntitySet<HinhAnhPhong> HinhAnhPhongs
		{
			get
			{
				return this._HinhAnhPhongs;
			}
			set
			{
				this._HinhAnhPhongs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Phong_HoaDon", Storage="_HoaDons", ThisKey="ID", OtherKey="IDPhong")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KhachSan_Phong", Storage="_KhachSan", ThisKey="IDKhachSan", OtherKey="ID", IsForeignKey=true)]
		public KhachSan KhachSan
		{
			get
			{
				return this._KhachSan.Entity;
			}
			set
			{
				KhachSan previousValue = this._KhachSan.Entity;
				if (((previousValue != value) 
							|| (this._KhachSan.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KhachSan.Entity = null;
						previousValue.Phongs.Remove(this);
					}
					this._KhachSan.Entity = value;
					if ((value != null))
					{
						value.Phongs.Add(this);
						this._IDKhachSan = value.ID;
					}
					else
					{
						this._IDKhachSan = default(Nullable<int>);
					}
					this.SendPropertyChanged("KhachSan");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HinhAnhPhongs(HinhAnhPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_HinhAnhPhongs(HinhAnhPhong entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.Phong = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QuanHuyen")]
	public partial class QuanHuyen : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenQuanHuyen;
		
		private System.Nullable<int> _IDTinhThanh;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<KhuVuc> _KhuVucs;
		
		private EntityRef<TinhThanh> _TinhThanh;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenQuanHuyenChanging(string value);
    partial void OnTenQuanHuyenChanged();
    partial void OnIDTinhThanhChanging(System.Nullable<int> value);
    partial void OnIDTinhThanhChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public QuanHuyen()
		{
			this._KhuVucs = new EntitySet<KhuVuc>(new Action<KhuVuc>(this.attach_KhuVucs), new Action<KhuVuc>(this.detach_KhuVucs));
			this._TinhThanh = default(EntityRef<TinhThanh>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuanHuyen", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenQuanHuyen
		{
			get
			{
				return this._TenQuanHuyen;
			}
			set
			{
				if ((this._TenQuanHuyen != value))
				{
					this.OnTenQuanHuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuanHuyen = value;
					this.SendPropertyChanged("TenQuanHuyen");
					this.OnTenQuanHuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTinhThanh", DbType="Int", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<int> IDTinhThanh
		{
			get
			{
				return this._IDTinhThanh;
			}
			set
			{
				if ((this._IDTinhThanh != value))
				{
					if (this._TinhThanh.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._IDTinhThanh = value;
					this.SendPropertyChanged("IDTinhThanh");
					this.OnIDTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QuanHuyen_KhuVuc", Storage="_KhuVucs", ThisKey="ID", OtherKey="IDQuanHuyen")]
		public EntitySet<KhuVuc> KhuVucs
		{
			get
			{
				return this._KhuVucs;
			}
			set
			{
				this._KhuVucs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_QuanHuyen", Storage="_TinhThanh", ThisKey="IDTinhThanh", OtherKey="ID", IsForeignKey=true)]
		public TinhThanh TinhThanh
		{
			get
			{
				return this._TinhThanh.Entity;
			}
			set
			{
				TinhThanh previousValue = this._TinhThanh.Entity;
				if (((previousValue != value) 
							|| (this._TinhThanh.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TinhThanh.Entity = null;
						previousValue.QuanHuyens.Remove(this);
					}
					this._TinhThanh.Entity = value;
					if ((value != null))
					{
						value.QuanHuyens.Add(this);
						this._IDTinhThanh = value.ID;
					}
					else
					{
						this._IDTinhThanh = default(Nullable<int>);
					}
					this.SendPropertyChanged("TinhThanh");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhuVucs(KhuVuc entity)
		{
			this.SendPropertyChanging();
			entity.QuanHuyen = this;
		}
		
		private void detach_KhuVucs(KhuVuc entity)
		{
			this.SendPropertyChanging();
			entity.QuanHuyen = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TaiKhoan")]
	public partial class TaiKhoan : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _loaitk;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<DanhGia> _DanhGias;
		
		private EntitySet<HoaDon> _HoaDons;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnloaitkChanging(System.Nullable<bool> value);
    partial void OnloaitkChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public TaiKhoan()
		{
			this._DanhGias = new EntitySet<DanhGia>(new Action<DanhGia>(this.attach_DanhGias), new Action<DanhGia>(this.detach_DanhGias));
			this._HoaDons = new EntitySet<HoaDon>(new Action<HoaDon>(this.attach_HoaDons), new Action<HoaDon>(this.detach_HoaDons));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(20)", UpdateCheck=UpdateCheck.Never)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_loaitk", DbType="Bit", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<bool> loaitk
		{
			get
			{
				return this._loaitk;
			}
			set
			{
				if ((this._loaitk != value))
				{
					this.OnloaitkChanging(value);
					this.SendPropertyChanging();
					this._loaitk = value;
					this.SendPropertyChanged("loaitk");
					this.OnloaitkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_DanhGia", Storage="_DanhGias", ThisKey="ID", OtherKey="IDKhachHang")]
		public EntitySet<DanhGia> DanhGias
		{
			get
			{
				return this._DanhGias;
			}
			set
			{
				this._DanhGias.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TaiKhoan_HoaDon", Storage="_HoaDons", ThisKey="ID", OtherKey="IDTaiKhoan")]
		public EntitySet<HoaDon> HoaDons
		{
			get
			{
				return this._HoaDons;
			}
			set
			{
				this._HoaDons.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_DanhGias(DanhGia entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
		
		private void attach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = this;
		}
		
		private void detach_HoaDons(HoaDon entity)
		{
			this.SendPropertyChanging();
			entity.TaiKhoan = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TienNghi")]
	public partial class TienNghi : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenTienNghi;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<DanhSachDichVu> _DanhSachDichVus;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTienNghiChanging(string value);
    partial void OnTenTienNghiChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public TienNghi()
		{
			this._DanhSachDichVus = new EntitySet<DanhSachDichVu>(new Action<DanhSachDichVu>(this.attach_DanhSachDichVus), new Action<DanhSachDichVu>(this.detach_DanhSachDichVus));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTienNghi", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenTienNghi
		{
			get
			{
				return this._TenTienNghi;
			}
			set
			{
				if ((this._TenTienNghi != value))
				{
					this.OnTenTienNghiChanging(value);
					this.SendPropertyChanging();
					this._TenTienNghi = value;
					this.SendPropertyChanged("TenTienNghi");
					this.OnTenTienNghiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TienNghi_DanhSachDichVu", Storage="_DanhSachDichVus", ThisKey="ID", OtherKey="IDTienNghi")]
		public EntitySet<DanhSachDichVu> DanhSachDichVus
		{
			get
			{
				return this._DanhSachDichVus;
			}
			set
			{
				this._DanhSachDichVus.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DanhSachDichVus(DanhSachDichVu entity)
		{
			this.SendPropertyChanging();
			entity.TienNghi = this;
		}
		
		private void detach_DanhSachDichVus(DanhSachDichVu entity)
		{
			this.SendPropertyChanging();
			entity.TienNghi = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhThanh")]
	public partial class TinhThanh : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TenTinhThanh;
		
		private System.Data.Linq.Binary _Created_at;
		
		private System.Nullable<System.DateTime> _Updated_at;
		
		private EntitySet<KhachSan> _KhachSans;
		
		private EntitySet<QuanHuyen> _QuanHuyens;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTenTinhThanhChanging(string value);
    partial void OnTenTinhThanhChanged();
    partial void OnCreated_atChanging(System.Data.Linq.Binary value);
    partial void OnCreated_atChanged();
    partial void OnUpdated_atChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdated_atChanged();
    #endregion
		
		public TinhThanh()
		{
			this._KhachSans = new EntitySet<KhachSan>(new Action<KhachSan>(this.attach_KhachSans), new Action<KhachSan>(this.detach_KhachSans));
			this._QuanHuyens = new EntitySet<QuanHuyen>(new Action<QuanHuyen>(this.attach_QuanHuyens), new Action<QuanHuyen>(this.detach_QuanHuyens));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true, UpdateCheck=UpdateCheck.Never)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhThanh", DbType="NVarChar(50)", UpdateCheck=UpdateCheck.Never)]
		public string TenTinhThanh
		{
			get
			{
				return this._TenTinhThanh;
			}
			set
			{
				if ((this._TenTinhThanh != value))
				{
					this.OnTenTinhThanhChanging(value);
					this.SendPropertyChanging();
					this._TenTinhThanh = value;
					this.SendPropertyChanged("TenTinhThanh");
					this.OnTenTinhThanhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Created_at", AutoSync=AutoSync.Always, DbType="rowversion NOT NULL", CanBeNull=false, IsDbGenerated=true, IsVersion=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Created_at
		{
			get
			{
				return this._Created_at;
			}
			set
			{
				if ((this._Created_at != value))
				{
					this.OnCreated_atChanging(value);
					this.SendPropertyChanging();
					this._Created_at = value;
					this.SendPropertyChanged("Created_at");
					this.OnCreated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Updated_at", DbType="DateTime", UpdateCheck=UpdateCheck.Never)]
		public System.Nullable<System.DateTime> Updated_at
		{
			get
			{
				return this._Updated_at;
			}
			set
			{
				if ((this._Updated_at != value))
				{
					this.OnUpdated_atChanging(value);
					this.SendPropertyChanging();
					this._Updated_at = value;
					this.SendPropertyChanged("Updated_at");
					this.OnUpdated_atChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_KhachSan", Storage="_KhachSans", ThisKey="ID", OtherKey="IDTinhThanh")]
		public EntitySet<KhachSan> KhachSans
		{
			get
			{
				return this._KhachSans;
			}
			set
			{
				this._KhachSans.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TinhThanh_QuanHuyen", Storage="_QuanHuyens", ThisKey="ID", OtherKey="IDTinhThanh")]
		public EntitySet<QuanHuyen> QuanHuyens
		{
			get
			{
				return this._QuanHuyens;
			}
			set
			{
				this._QuanHuyens.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KhachSans(KhachSan entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_KhachSans(KhachSan entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
		
		private void attach_QuanHuyens(QuanHuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = this;
		}
		
		private void detach_QuanHuyens(QuanHuyen entity)
		{
			this.SendPropertyChanging();
			entity.TinhThanh = null;
		}
	}
}
#pragma warning restore 1591
